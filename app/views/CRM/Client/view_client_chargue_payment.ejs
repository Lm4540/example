<script>
  var last_payment_rendered = '<%= payments[payments.length - 1].id %>',
    last_sale_rendered = '<%= finalized[finalized.length - 1].id %>',
    load_limit = 10,
    more_payments_to_render = '<%= hay_mas_pagos %>',
    more_sale_to_render = '<%= hay_mas_ventas %>';

  let _status = {
    'process': 'Orden Abierta',
    'prepared': 'Paquete Armado',
    'transport': 'Paquete en ruta',
    'delivered': 'Entregado, Remuneración pendiente',
    'collected': 'Remuneración recibida',
    'revoking': 'Solicitud de Liberacion',
    'revoked': 'Orden cancelada',
    'delivery_failed': 'Entrega Fallida',
    'to_resend': 'Para Reenvio',
    'closed': 'Orden cerrada / En espera de preparación',
  }




  const charge_payments = async () => {
    document.querySelector("#tr_loading_payments").style.display = "table-row";
    document.querySelector("#tr_no_more_payments").style.display = "none";
    document.querySelector("#tr_more_payments").style.display = "none";

    ///sales/client/view/client_id/sales/last_sale_rendered/load_limit
    let response = await fetch(`/sales/client/view/<%= cliente.id %>/payments/${last_payment_rendered}/${load_limit}`, {
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
    });

    //Procesar la respuest para que me guarde los productos en cuestion en una variable
    let res = await response.json();
    console.log(res)
    res.details.forEach(payment => {
      let tr = document.createElement('tr');
      let content = '';
      if(payment.type == "money"){
            content += `<td>Efectivo</td>
                    <td>
                      ${format_date(payment.createdAt) }
                       ${(payment.createdBy !== undefined && payment.createdBy !== null)  ?
                      "<br> Registrado por: " + payment.createdBy : ''}
                      
                    </td>
                    <td class="text-center"> $${ money_format(payment.amount) }

                        ${payment.asigned_amount < payment.amount ? 
                        '<br> <span class="text-success"> Saldo a Favor ($' + money_format(payment.amount - payment.asigned_amount) + ')</span>'
                        : ''}
                    </td>`;

      }else{

            content += `<td> ${ (payment.type == "transfer" ? 'Depósito o transferencia' : "Tarjeta de Crédito" )}
                      <br>Banco: ${ payment.bank }<br>Referencia: ${ payment.reference }</td>
                    <td>
                      ${format_date(payment.createdAt) }
                       ${(payment.createdBy !== undefined && payment.createdBy !== null)  ?
                      "<br> Registrado por: " + payment.createdBy : ''}
                      
                    </td>
                    <td class="text-center"> $${ money_format(payment.amount) }

                        ${payment.asigned_amount < payment.amount ? 
                        '<br> <span class="text-success"> Saldo a Favor ($' + money_format(payment.amount - payment.asigned_amount) + ')</span>'
                        : ''}
                    </td>`;


      }
 


      tr.innerHTML = content;
      document.querySelector("#table_payments").appendChild(tr);
    });

    last_payment_rendered = res.last;
    more_payments_to_render = res.more;


    if (res.more) {
      document.querySelector("#tr_loading_payments").style.display = "none";
      document.querySelector("#tr_more_payments").style.display = "table-row";
    } else {
      document.querySelector("#tr_loading_payments").style.display = "none";
      document.querySelector("#tr_no_more_payments").style.display = "table-row";
    }
  }




  const charge_sales = async () => {
    document.querySelector("#tr_loading_sales").style.display = "table-row";
    document.querySelector("#tr_no_more_sales").style.display = "none";
    document.querySelector("#tr_more_sales").style.display = "none";

    ///sales/client/view/client_id/sales/last_sale_rendered/load_limit
    let response = await fetch(`/sales/client/view/<%= cliente.id %>/sales/${last_sale_rendered}/${load_limit}`, {
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
    });

    //Procesar la respuest para que me guarde los productos en cuestion en una variable
    let res = await response.json();
    console.log(res)
    res.details.forEach(order => {
      let tr = document.createElement('tr');
      let content = ``;
      if (order._status == 'revoked') {
        content += `<td>${order.id}</td>
                      <td>$0.00 <small class="text-danger">(Original: $${ money_format(Number.parseFloat(order.balance) + Number.parseFloat(order.delivery_amount))})</small></td>
                      <td class="text-center">
                        --
                      </td>
                      <td>Pedido Cancelado/Revocado
                        <br>
                        ${ order.revoked_reason }
                      </td>
                      <td>${ format_date(order.createdAt) } </td>
                      <td>
                        <a href="/sales/view/${ order.id}" class="badge bg-blue mt-2">Ver Venta</a><br>`;
        if (order.invoice_number != null) {
          content += `<a href="/sales/view_invoice/${ order.id }" class="badge bg-warning mt-2">Ver factura Anulada</a>`;
        }
        content += `</td>`;
      } else {
        content += `<td>${order.id }</td>
                    <td>$${ money_format(Number.parseFloat(order.balance) + Number.parseFloat(order.delivery_amount)) }</td>
                    <td>
                      $${ money_format(order.collected) }
                    </td>
                    <td>${_status[order._status] }</td>
                    <td>${ format_date(order.createdAt) }</td>
                    <td>`;
        if (order.status == 'closed') {
          content += `<span class="badge bg-green"> Paquete preparado</span>`;


        }

        if (order.invoice_number == null) {
          let content = `<span class="badge bg-secondary" onclick="create_invoice('${ order.id }');"> Realizar la Factura</span>`;
        } else {
          let content = `<a href="/sales/view_invoice/${ order.id }" class="badge bg-secondary">Ver factura</a>`;
        }
        content += `<br>
                      <a href="/sales/view/${ order.id }" class="badge bg-blue mt-2">Ver Venta</a>`;

        if (order.collected < fix_number(order.balance + order.delivery_amount)) {
          content += `<a class="badge bg-success mt-2" href="javascript:void(0)" onclick="create_payment2('${ order.id}', '${ fix_number(order.balance + order.delivery_amount - order.collected) }' )"><i class="fas fa-clipboard-list mr-3"></i>Registrar pago</a>`;
        } else {
          if (new Date(order.createdAt).getTime() > new Date('2024-01-01').getTime()) {
            content += ` <a href="/sales/view_pays/${ order.id }" class="badge bg-purple mt-2" target="_blank">Ver Pagos</a>`;

          }
        }

        content += `</td>`;
      }

      tr.innerHTML = content;
      document.querySelector("#tbody_sales_history").appendChild(tr);
    });

    last_sale_rendered = res.last;
    more_sale_to_render = res.more;
    if (res.more) {
      document.querySelector("#tr_loading_sales").style.display = "none";
      document.querySelector("#tr_more_sales").style.display = "table-row";
    } else {
      document.querySelector("#tr_loading_sales").style.display = "none";
      document.querySelector("#tr_no_more_sales").style.display = "table-row";
    }
  }
</script>