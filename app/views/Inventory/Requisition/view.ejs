<!DOCTYPE html>
<html lang="es">

<head>
  <%- include('../../Layouts/Head.ejs') %>
  <link rel="stylesheet" href="assets/libs/choices/choices.min.css">
  <style></style>
</head>

<body class="<%= darkMode %>">
  <%- include('../../Layouts/SideBar.ejs') %>
  <div id="main">
    <%- include('../../Layouts/NavBar.ejs') %>
    <div class="main-content container-fluid">
      <div class="card">
        <div class="card-header">
          <h2 class="card-title text-center">
            Solicitud de traslado de <%= indexed_sucursals[requisition.origin] %> hacia <%= indexed_sucursals[requisition.destino] %> #<%= requisition.id %>
            <% if ((permission.includes('trasnfer_between_warehouses') && user.sucursal == requisition.destino) || permission.includes('trasnfer_between_all_warehouses')) { %>
            <br><span class="badge bg-purple mt-2" style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#newRequisitionDetail">Agregar Producto</span>
            <% } %>
            <% if ((permission.includes('close_requisitions') && requisition.origin == user.sucursal) || permission.includes('close_all_requisitions')) { %>
            <span class="badge bg-danger mt-2" style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#finishModal">Elaborar Envio</span>
            <% } %>
            <a class="badge bg-success mt-2" style="cursor: pointer;" href="/inventory/requisition/<%= requisition.id %>/my">Ver mis productos</a>
          </h2>
        </div>

        <div class="card-body table-responsive">
          <table class="table table-sm table-bordered table-hover table-stripped">
            <thead>
              <tr>
                <th>image</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Detalle</th>
              </tr>
            </thead>
            <tbody>
              <% let keys = Object.keys(products)
                keys.forEach(key => { 
                  let prod = products[key] ;
              %>

              <tr>
                <td class="text-center">
                  <img src="<%= prod.image %>" class="round" alt="<%= prod.name %>" width="150px">
                </td>
                <td class="text-center">
                  <%= prod.name %> <br>
                  SKU: <%= prod.sku %><br>
                  Codigo: <%= prod.provider_code %><br>
                  <a href="/inventory/product/view/<%= key %>" class="badge bg-secondary round mt-1"> Ver Producto</a><br>
                  <span class="badge bg-green mt-1" onclick="viewStockLocations('<%= requisition.origin%>', 'Santa Tecla', '<%= key %>')" data-bs-target="#stockLocationsModal" data-bs-toggle="modal">Ver Ubicaciones</span><br>

                </td>
                <td class="text-center"><%= prod.cant %></td>
                <td class="text-center">
                  <ul class="list-group">

                    <% prod.details.forEach(dt => {

                    if (dt.client !== null) { %>

                    <li class="list-group-item"> <%= dt.cant %>U <%= `para ${dt.client_name}` %> (<%= dt.createdBy %>)

                      <% if ((permission.includes('trasnfer_between_warehouses') && user.sucursal == requisition.destino) || permission.includes('trasnfer_between_all_warehouses')) { %>
                      <span class="badge bg-danger ml-4" data-bs-target="#quitDetailModal" data-bs-toggle="modal" onclick="quit_detail('<%= dt.id %>', '<%= dt.cant %>')"> Quit</span>
                      <% } %>

                    </li>
                    <% }else{ %>

                    <li class="list-group-item">
                      <%= dt.cant %>U (<%= dt.createdBy %>)
                      <span class="badge bg-orange ml-4" data-bs-target="#quitDetailModal" data-bs-toggle="modal" onclick="quit_detail('<%= dt.id %>', '<%= dt.cant %>')"> Quit</span>
                    </li>

                    <% }
                  }) %>
                  </ul>
                </td>
              </tr>

              <% }) %>
            </tbody>


            <tfoot>
              <tr>
                <td>Comentario:</td>
                <td colspan="4">
                  <% if ((permission.includes('trasnfer_between_warehouses') && user.sucursal == requisition.destino) || permission.includes('trasnfer_between_all_warehouses')) { %>
                  <textarea name="commentary" id="commentary" class="form-control"><%= requisition.commentary %></textarea>

                  <%}%>
                </td>
              </tr>
            </tfoot>
          </table>
        </div>
      </div>


      <div class="modal fade" id="newRequisitionDetail" tabindex="-1" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
              <div class="modal-header">
                  <h3 class="text-center">Agregar Item</h3>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
              </div>

              <div class="modal-body">
                  <div class="form-group">
                    <label for="productSelect" style="font-size: 120%;">Escribe el nombre o SKU <small class="text-danger">Solo apareceran productos con existencias</small></label>
                    <select name="productSelect" id="productSelect" class="form-control"></select>
                  </div>

                  <div class="form-group">
                    <label for="product_cant">Cantidad</label>
                    <input type="number" name="product_cant" step="1" id="product_cant" class="form-control">
                    <small class="text-danger" id="max_cant_small"></small>
                  </div>


              </div>



              <div class="modal-footer" style="display: block;">
                  <div class="text-center">
                    <button type="button" class="btn btn-secondary round" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
                    <button class="btn round btn-sm btn-warning" id="add_detail">Agregar</button>

                  </div>
              </div>
            </div>
        </div>
      </div>


      <div class="modal fade" id="quitDetailModal" tabindex="-1" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
              <div class="modal-header">
                  <h3 class="text-center">Quitar Item</h3>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
              </div>

              <div class="modal-body">
                  <div class="form-group">
                    <label for="quit_product_cant">Cantidad a Quitar</label>
                    <input type="number" name="quit_product_cant" step="1" id="quit_product_cant" class="form-control">

                  </div>
              </div>
              <div class="modal-footer" style="display: block;">
                  <div class="text-center">
                    <button type="button" class="btn btn-secondary round" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
                    <button class="btn round btn-sm btn-danger" id="quit_Detail">Quitar</button>

                  </div>
              </div>
            </div>
        </div>
      </div>

      <div class="modal fade" id="finishModal" tabindex="-1" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
              <div class="modal-header">
                  <h3 class="text-center">Procesar Orden</h3>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
              </div>

              <div class="modal-body">
                  <div class="form-group">
                    <label for="shiptment_transport">Transporta</label>
                    <input type="text" name="shiptment_transport" step="1" id="shiptment_transport" class="form-control">

                  </div>
              </div>

              <div class="modal-footer text-center" style="display: block;">
                  <button type="button" class="btn btn-secondary round" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
                  <button class="btn round btn-sm btn-success" id="proccessRequisition">Elaborar Envio</button>

              </div>
            </div>
        </div>
      </div>


    </div>

    <div class="modal fade" id="stockLocationsModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Ubicaciones del Producto <span id="locationSucursal"></span></h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="col-8 form-group">
                <label for="newLocation">¿Cuál es la Ubicación?</label>
                <input type="hidden" name="locationProductInput" id="locationProductInput">
                <input type="text" class="form-control" id="newLocation">
              </div>
              <div class="col-4">
                <span onclick="saveNewLocation()" class="badge bg-purple mt-3">Agregar</span>
              </div>
            </div>

          </div>

          <div class="modal-body">
            <table class="table table-sm table-hover table-bordered">
              <thead>
                <tr>
                  <th>Ubicacion</th>
                  <th>Agregado por</th>
                  <th>Fecha</th>
                  <th>Opciones</th>
                </tr>
              </thead>
              <tbody id="locationsTable">

              </tbody>
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

          </div>
        </div>
      </div>
    </div>
  <%- include('../../Layouts/Footer.ejs') %>
  </div>
</body>

<%- include('../../Layouts/Scripts.ejs') %>
<script src="assets/libs/choices/choices.min.js"></script>
<script>
  var product_in_select2 = {},
    selected_sucursal = '<%= requisition.origin %>>',
    selectProduct = document.querySelector('#productSelect'),
    product_last_val = '',
    tbody = document.querySelector('#_tr_details'),
    quitando_detalle = null,
    quitando_max_cant = 0,
    s_options = {
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
    };




  const quit_detail = (id, cant) => {
    quitando_detalle = id;
    quitando_max_cant = cant;
    document.querySelector("#quit_product_cant").value = cant;
  }


  const choices_product = new Choices(selectProduct, {
    'searchResultLimit': 15,
    'searchChoices': false,
    'searchFloor': 2,
  });

  const doSearchProduct = async (val) => {

    // Opciones por defecto estan marcadas con un *
    const response = await fetch(`/inventory/products/select2?search=${encodeURIComponent(val)}&onlystock=true&sucursal=${selected_sucursal}`, s_options);
    //Procesar la respuest para que me guarde los productos en cuestion en una variable
    let res = await response.json();
    product_in_select2 = {};
    res.forEach(element => product_in_select2[element.id] = element);
    return res;
  }

  var timer_product;
  selectProduct.addEventListener('search', async (e) => {
    let valor_actual = e.detail.value.trim();
    if (product_last_val !== valor_actual) {
      product_last_val = valor_actual;
      clearTimeout(timer_product);
      timer_product = setTimeout(async () => {
        let data = await doSearchProduct(e.detail.value.trim());
        choices_product.setChoices(data, 'value', 'label', true);
      }, 500);
    }
  });

  document.addEventListener('DOMContentLoaded', event => {

    selectProduct.addEventListener('change', e => {
      let max = product_in_select2[e.target.value].stock - product_in_select2[e.target.value].reserved;
      document.querySelector("#max_cant_small").innerHTML = `${max} unidades Maximo`;
      document.querySelector("#product_cant").max = max;
    });



    document.querySelector("#quit_Detail").addEventListener('click', e => {
      //aqui va la magia de agregar el detalle
      let data = {
        requisition: '<%= requisition.id %>',
        detail: quitando_detalle,
        cant: Number.parseInt(document.querySelector("#quit_product_cant").value),
        case: 'quitDetail'
      }


      if (isNaN(data.cant) || data.cant < 1 || data.cant > quitando_max_cant) {
        return errorMessage('Ingrese una cantidad valida');
      }

      document.querySelector("#quit_Detail").disabled = true;

      postData('/inventory/requisition', data).then(data => {
        if (data.status == 'success') {
          successMessage(data.message);
          setTimeout(() => window.location.reload(), 1000);

        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);
        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
        }
      });
    });

    document.querySelector("#add_detail").addEventListener('click', e => {
      //aqui va la magia de agregar el detalle
      let data = {
        requisition: '<%= requisition.id %>',
        product: Number.parseInt(selectProduct.value),
        cant: Number.parseInt(document.querySelector("#product_cant").value),
        case: 'addDetail'
      }


      if (isNaN(data.cant) || data.cant < 1) {
        return errorMessage('Ingrese una cantidad valida');
      } else if (isNaN(data.product) || data.product < 1) {
        return errorMessage('Ingrese una cantidad valida');
      }

      document.querySelector("#add_detail").disabled = true;

      console.log(data);
      postData('/inventory/requisition', data).then(data => {
        if (data.status == 'success') {
          successMessage(data.message);
          setTimeout(() => window.location.reload(), 1000);

        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);
        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
        }
      });
    });


    document.querySelector("#proccessRequisition").addEventListener('click', e => {
      //aqui va la magia de agregar el detalle
      let data = {
        requisition: '<%= requisition.id %>',
        transporta: document.querySelector("#shiptment_transport").value,
      }


      if (data.transporta.length < 3) {
        return errorMessage('Especifique quien transporta el producto');
      }

      document.querySelector("#proccessRequisition").disabled = true;

      console.log(data);
      postData('/inventory/requisition/proccess', data).then(data => {
        if (data.status == 'success') {
          successMessage(data.message);
          setTimeout(() => window.location.href = `/inventory/shipment/print/${data.shipment.id}`, 1000);

        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);
        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
        }
      }).catch(error => {
        console.log(error)
      });
    });




  });


  const viewStockLocations = (sucursal, sucursalName, product) => {

    document.getElementById('locationSucursal').innerHTML = sucursalName;
    document.getElementById('locationProductInput').value = product;
    document.getElementById('locationsTable').innerHTML = '';

    fetch(`/inventory/product/locations?product=${product}&sucursal=${sucursal}`).then(data => data.json()).then(response => {
      if (response.status == 'error') {
        return errorMessage(response.message);
      } else if (response.status == 'success') {
        response.data.forEach(location => {
          let tr = document.createElement('tr');
          tr.id = `location_${location.id}`;
          tr.innerHTML = `
            <td>${location.location}</td>
            <td>${location.createdBy}</td>
            <td>${format_date(location.createdAt)}</td>
            <td><span class="badge bg-danger" onclick="deleteLocation(${location.id})">Quitar</span></td>
          `;
          document.getElementById('locationsTable').appendChild(tr);
        });

        console.log(response.data);

      }
    }).catch(response => console.log(response));
  }

  const saveNewLocation = () => {
    let location = document.querySelector("#newLocation").value;
    if (location == "") {
      return errorMessage('Escriba una ubicación');
    }
    postData('/inventory/product/locations', {
      product: document.getElementById('locationProductInput').value,
      location
    }).then(data => {
      if (data.status == 'success') {
        let tr = document.createElement('tr');
        let location = data.data;
        tr.id = `location_${location.id}`;
        tr.innerHTML = `
            <td>${location.location}</td>
            <td>${location.createdBy}</td>
            <td>${format_date(location.createdAt)}</td>
            <td><span class="badge bg-danger" onclick="deleteLocation(${location.id})">Quitar</span></td>
          `;
        document.getElementById('locationsTable').appendChild(tr);

      } else if (data.status == 'errorMessage') {
        e.target.disabled = false;
        return errorMessage(data.message);
      } else {
        errorMessage(data.message);
        return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
      }
    });

  }

  const deleteLocation = (id) => {
    postData('/inventory/product/locations', {
      id
    }, 'PUT').then(data => {
      if (data.status == 'success') {
        document.getElementById('locationsTable').removeChild(document.getElementById(`location_${data.data}`));
        return successMessage('Eliminado');

      } else if (data.status == 'errorMessage') {
        e.target.disabled = false;
        return errorMessage(data.message);
      } else {
        errorMessage(data.message);
        return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
      }
    });
  }
</script>

<% if ((permission.includes('trasnfer_between_warehouses') && user.sucursal == requisition.destino) || permission.includes('trasnfer_between_all_warehouses')) { %>
<script>
  document.addEventListener('DOMContentLoaded', event => {



    document.querySelector("#commentary").addEventListener('change', e => {
      let value = e.target.value;

      postData('/inventory/requisition', {
        requisition: '<%= requisition.id %>',
        commentary: e.target.value,
        case: 'commentary'
      }).then(data => {
        if (data.status == 'success') {
          successMessage(data.message);
        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);
        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
        }
      });
    });

  });
</script>

<%}%>

</html>