<% if (cliente.seller == user.employee || permission.includes('update_sales_of_another_user')) {
      if (cliente.type == 'major') { %>
<script src="/socket.io/socket.io.js"></script>
<script>
  var _process = '<%= Helper.randomString(5) %>';
  var socket = io.connect('<%= baseURL %>/sales');
  var quit_case = null;
  var free = false,
    product_in_select2 = {},
    current_details = JSON.parse('<%- JSON.stringify(indexed_details) %>'),
    detail_to_quit = null,
    product_last_val = '',
    product_last_val2 = '',
    modalfinish = new bootstrap.Modal(document.getElementById('deliverydetailsModal'), {
      keyboard: true
    });
  //const socket = io('/logistics');
  socket.on('close_sale_error', data => {
    console.log(data);
    if (data._process == _process) {
      document.querySelector('#saveReal').disabled = false;
      return errorMessage(data.errorMessage);
    }
  });

  socket.on('sale_saved', data => {
    if (data._process == _process) {
      successMessage('Guardado con Exito');
      // window.location.href = `/sales/view/${data.sale}`;
      window.location.reload();
    }
  });

  socket.on('add_detail_error', data => {
    if (data._process == _process) {
      document.querySelector("#save_sale_detail").disabled = false;

      return errorMessage(data.errorMessage);
    }
  });

  socket.on('add_detail_success', data => {
    if (data._process == _process) {
      successMessage('Guardado');

      document.getElementById('close_order').style.display = 'inline-block';

      let detail = data.detail;
      let div = null;

      if (current_details[data.detail.id] == undefined) {
        div = document.createElement('div');
        div.classList.add('col-12', 'col-sm-6', 'col-md-6', 'col-lg-4', 'product_item');
        div.id = `product_item_${detail.id}`;
        document.querySelector('#div_add_details').appendChild(div);
      } else {
        div = document.getElementById(`product_item_${detail.id}`)
      }
      document.querySelector('#span_sale_balance').innerHTML = `($${data.balance})`;

      current_details[data.detail.id] = detail;

      let content = `<div class="card">
                                    <div class="card-body text-center">
                                       <img src="${detail.image}" alt="Image" class="product_image" style="width: 150px; "><br>
                                       <p style="cursor:pointer;">${detail.description}</p>
                                       <p> <b>${detail.cant}</b> X $${money_format(detail.price)} = $${money_format(detail.cant  * detail.price)}</p>`;
      if (detail.product == null) {
        content += `<p class="text-danger">Esperando que Ingrese</p><br>
                                       <button class="btn btn-outline-danger" onclick="quit('${detail.id }')">Quitar</button>`;
      } else if (detail.reserved > 0 && detail.reserved < detail.cant) {
        content += `<p class="text-warning"> Solamente <b>${detail.reserved}</b> reservdaos</p>
                                       <button class="btn btn-outline-danger" onclick="quit('${detail.id}')">Quitar no reservados</button>`;
      } else if (detail.reserved == detail.cant && detail.ready < detail.reserved) {
        content += `<p class="text-primary"> Unidades reservadas<br> Pendiente de revisi贸n</p>
                                       <button class="btn btn-outline-danger" onclick="quit('${detail.id}')">Quitar no revisados</button>`;
      } else if (detail.cant == detail.ready) {
        content += `<p class="text-primary"> Reservado y Revisado<br></p>
                                       <button class="btn btn-outline-danger" onclick="release_request('${detail.id}')">Solicitar Liberaci贸n</button>`;
      }
      content += `</div> </div>`;
      div.innerHTML = content;

      clean_detail_inputs();
    }
  });


  socket.on('quit_detail_error', data => {
    if (data._process == _process) {
      document.querySelector("#quitDetail").disabled = false;
      return errorMessage(data.message);

    }
  });

  socket.on('quit_detail_success', data => {
    document.querySelector("#quitDetail").disabled = false;
    if (data._process == _process) {
      successMessage('Guardado');
      document.querySelector('#span_sale_balance').innerHTML = `($${money_format(data.balance)})`;

      let detail = data.detail;
      current_details[detail_to_quit] = detail;
      let div = document.getElementById(`product_item_${detail_to_quit}`);

      if (detail == null) {
        div.parentElement.removeChild(div);
        //Emitir evento detalle eliminado
      } else {
        let content = `<div class="card">
                                       <div class="card-body text-center">
                                          <img src="${detail.image}" alt="Image" class="product_image" style="width: 150px; "><br>
                                          <p style="cursor:pointer;">${detail.description}</p>
                                          <p> <b>${detail.cant}</b> X $${money_format(detail.price)} = $${money_format(detail.cant  * detail.price)}</p>`;
        if (detail.product == null) {
          content += `<p class="text-danger">Esperando que Ingrese</p><br>
                                          <button class="btn btn-outline-danger" onclick="quit('${detail.id }')">Quitar</button>`;
        } else if (detail.reserved > 0 && detail.reserved < detail.cant) {
          content += `<p class="text-warning"> Solamente <b>${detail.reserved}</b> reservdaos</p>
                                          <button class="btn btn-outline-danger" onclick="quit('${detail.id}')">Quitar no reservados</button>`;
        } else if (detail.reserved == detail.cant && detail.ready < detail.reserved) {
          content += `<p class="text-primary"> Unidades reservadas<br> Pendiente de revisi贸n</p>
                                          <button class="btn btn-outline-danger" onclick="quit('${detail.id}')">Quitar no revisados</button>`;
        } else if (detail.cant == detail.ready) {
          /* content += `<p class="text-primary"> Reservado y Revisado<br></p>
                                <button class="btn btn-outline-danger" onclick="release_request('${detail.id}')">Solicitar Liberaci贸n</button>`;*/
        }
        content += `</div> </div>`;
        div.innerHTML = content;
      }

      modalQuit.toggle();
    }
  });

  const locations = JSON.parse('<%- JSON.stringify(locations) %>');
  //recorte de imagen del pproducto principal
  const previewimagezone = document.getElementById("add_image_preview"),
    realImage = document.getElementById("add_image_real"),
    selectProduct = document.querySelector('#productSelect'),
    selectProduct2 = document.querySelector('#productSelect2'),

    client_type = '<%= cliente.type %>',


    modalQuit = new bootstrap.Modal(document.getElementById('quitDetailModal'), modal_options);



  const choices_product2 = new Choices(selectProduct2, {
    'searchResultLimit': 15,
    'searchChoices': false,
    'searchFloor': 2,
  });

  const choices_product = new Choices(selectProduct, {
    'searchResultLimit': 15,
    'searchChoices': false,
    'searchFloor': 2,
  });


  const clean_detail_inputs = () => {
    document.querySelector("#freeName").value = "";
    document.querySelector("#freeCant").value = "1";
    document.querySelector("#freePrice").value = "";
    document.querySelector("#add_image_real").value = "";

    document.getElementById('product_cant').value = "1";
    document.getElementById('personalizedPrice').value = "";
    document.getElementById('personalizedPrice').disabled = true;
    document.getElementById('personalizedPrice').style.display = 'none';
    document.getElementById('product__image').style.display = 'none';
    choices_product.removeActiveItems();

    document.querySelector("#save_sale_detail").disabled = false;
    // choices_product.clearChoices();

    form_inventory();
  }

  // Variables para la nueva orden

  const doSearchProduct = async (val, sucursal) => {
    // Opciones por defecto estan marcadas con un *
    const response = await fetch(`/inventory/products/select2?search=${encodeURIComponent(val)}&onlystock=true&sucursal=${sucursal}`, {
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
    });

    //Procesar la respuest para que me guarde los productos en cuestion en una variable
    let res = await response.json();
    product_in_select2 = {};
    res.forEach(element => product_in_select2[element.id] = element);
    return res;
  }

  var timer_product;
  selectProduct.addEventListener('search', async (e) => {
    let valor_actual = e.detail.value;
    if (product_last_val !== valor_actual) {
      product_last_val = valor_actual;
      clearTimeout(timer_product);
      timer_product = setTimeout(async () => {
        let data = await doSearchProduct(e.detail.value, '<%= UserSucursal %>');
        choices_product.setChoices(data, 'value', 'label', true);
      }, 500);
    }
  });

  var timer_product_transfer;
  selectProduct2.addEventListener('search', async (e) => {
    let valor_actual = e.detail.value;
    if (product_last_val2 !== valor_actual) {
      product_last_val2 = valor_actual;
      clearTimeout(timer_product_transfer);
      timer_product_transfer = setTimeout(async () => {
        let data = await doSearchProduct(e.detail.value, document.querySelector("#trasnferSucursal").value);
        choices_product2.setChoices(data, 'value', 'label', true);
      }, 500);
    }
  });

  document.addEventListener('DOMContentLoaded', event => {

    clean_detail_inputs();
    document.querySelector("#free_toggle").style.display = "none";

    // Controles para cerrar la Orden:

    document.querySelector('#close_order').addEventListener('click', e => {
      modalfinish.toggle();
      document.querySelector("#reference_").focus();
    });

    document.querySelector("#delivery_type").addEventListener('change', e => {
      document.querySelector("#direction_").disabled = false;
      document.querySelector("#direction_").value = '<%= cliente.direction %>';
      if (e.target.value == 'delivery') {
        document.querySelector("#local_delivery_div").style.display = 'block';
        document.querySelector("#delivery_provider").disabled = false;
        document.querySelector("#delivery_amount").disabled = false;
        document.querySelector("#delivery_amount").value = 3.7;
        document.querySelector("#direction_").focus();
      } else {
        if (e.target.value == 'local') {
          document.querySelector("#delivery_amount").disabled = true;
          document.querySelector("#delivery_amount").value = 0.00;
          document.querySelector("#direction_").value = 'Retiro en Tienda';
          document.querySelector("#direction_").disabled = true;
          document.querySelector("#reference_").focus();
        } else {
          document.querySelector("#delivery_amount").disabled = false;
          document.querySelector("#delivery_amount").value = 3.7;
          document.querySelector("#direction_").focus();
        }

        document.querySelector("#local_delivery_div").style.display = 'none';
        document.querySelector("#delivery_provider").disabled = true;
      }

      
    });

    document.querySelector("#delivery_provider").addEventListener('change', e => {
      let value = e.target.value;
      let local = locations[e.target.value];
      let content = '';

      if (local !== null && local !== undefined) {
        local.forEach(l => {
          content += `<option value="${l}">`;
        });
      }
      document.querySelector("#directions").innerHTML = content;
    });

    document.querySelector('#saveReal').addEventListener('click', e => {
      let delivery_amount = Number.parseFloat(document.querySelector("#delivery_amount").value);
      delivery_amount = Number.isNaN(delivery_amount) ? 0 : delivery_amount;
      let data = {
        _process,
        client: '<%= cliente.id %>',
        delivery_type: document.querySelector("#delivery_type").value,
        delivery_provider: null,
        direction: document.querySelector("#direction_").value,
        reference: document.querySelector("#reference_").value,
        phone: document.querySelector("#phone_").value,
        day: document.querySelector("#day_").value,
        time: document.querySelector("#hour_").value,
        delivery_amount,
      }

      if (data.delivery_type == 'delivery') {
        data.delivery_provider = document.querySelector("#delivery_provider").value;
      }

      if (data.direction.length < 5) {
        return errorMessage('Coloque una Direcci贸n v谩lida');
      } else if (data.phone.length < 8) {
        return errorMessage('Coloque el tel茅fono de contacto');
      } else if (data.day.length < 10) {
        return errorMessage('Seleccione una fecha v谩lida');
      } else if (data.time.length < 5) {
        return errorMessage('Seleccione una hora valida');
      } else if (data.day < document.querySelector("#day_").dataset.min) {
        return errorMessage('Seleccione una fecha v谩lida');
      }

      e.target.disabled = true;
      socket.emit('close_sale', data);

      setTimeout(window.location.reload(), 5000);
    });

    document.querySelector("#quitDetail").addEventListener('click', e => {
      document.querySelector("#quitDetail").disabled = true;
      if (detail_to_quit == null) {
        return errorMessage('Has abierto el modal de manera Manual, si sigues intentando da帽ar el sistema seras bloqueado');
      }
      let cant = document.querySelector('#quit_input').value;
      if (cant < 1) {
        toast('rose', 'Operaci贸n cancelada');
        modalQuit.toggle();
        return false;
      }

      let data = {
        cant,
        detail_id: detail_to_quit,
        case: 'delete',
        _process,
      }


      if (quit_case == "reserved") {
        //token

        postData('/sales/details/quit', data).then(data => {
          if (data.status == 'success') {
            successMessage('Actualizado');
            setTimeout(() => {
              document.location.reload();
            }, 1500);
          } else if (data.status == 'errorMessage') {
            document.querySelector("#quitDetail").disabled = false;
            return errorMessage(data.message);


          } else {
            return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la p谩gina he int茅ntalo nuevamente');
          }
        });

      } else {
        socket.emit('quit_sale_detail', data);
      }


    });

    document.getElementById('quitDetailModal').addEventListener('hidden.bs.modal', event => {
      detail_to_quit = null;
      quit_case = null;
    })

    document.querySelector("#save_sale_detail").addEventListener('click', e => {
      let data = {
        client: '<%= cliente.id %>',
        sale: '<%= in_process !== null ? in_process.id : "" %>',
        case: 'inventory',
        _process,
      }

      document.querySelector("#save_sale_detail").disabled = true;
      let p = product_in_select2[document.getElementById('productSelect').value];
      if (p !== undefined) {
        data.product = p.id;
        let price = document.getElementById('priceSelect').value;
        data.price = price == 'none' ?
          document.getElementById('personalizedPrice').value :
          (price == 'minor' ? p.price : p.major);

        data.cant = document.getElementById('product_cant').value;
        let _dist = Number.parseInt(p.stock) - Number.parseInt(p.reserved);
        if (data.cant > _dist) {
          return errorMessage(`La cantidad Maxima no puede ser mayor a ${_dist}`);

        }
        console.log(p)
      } else {
        return errorMessage('No ha Seleccionado un producto');
      }

      if (data.price == '' || data.price < 0 || data.price == null) {
        return errorMessage('Precio no V谩lido, Si desea realizar una regal铆a, por favor seleccione valor personalizado y escriba el precio 0');
      } else if (data.cant < 1) {
        document.getElementById('product_cant').value = '1';
        document.querySelector("#freeCant").value = "1";
        return errorMessage('La cantidad no puede ser menor a 1');
      }
      //enviar datos al server
      socket.emit('add_sale_detail', data);
      clean_detail_inputs();
    });

    selectProduct.addEventListener('change', e => {
      let product = product_in_select2[selectProduct.value];
      if (product != undefined) {
        document.querySelector('#priceSelect').innerHTML = client_type == 'minor' ?
          `<option value="minor" selected>Precio de Detalle $${product.price}</option>
                     <option value="major">Precio de Mayor $${product.major}</option>
                     <option value="none">Valor Personalizado</option>` :
          `<option value="minor">Precio de Detalle $${product.price}</option>
                     <option value="major" selected>Precio de Mayor $${product.major}</option>
                     <option value="none">Valor Personalizado</option>`
        document.querySelector("#max_product_cant").innerHTML = `Cantidad maxima ${product.stock - product.reserved}`;
        document.querySelector("#product__image").src = product.image;
        document.getElementById('product__image').style.display = 'block';
      }
    });

    document.querySelector("#priceSelect").addEventListener('change', e => {
      if (document.querySelector("#priceSelect").value == 'none') {
        document.getElementById('personalizedPrice').style.display = 'block';
        document.querySelector("#personalizedPrice").disabled = false;
        document.querySelector("#personalizedPrice").focus();

      } else {
        document.getElementById('personalizedPrice').style.display = 'none';
        document.querySelector("#personalizedPrice").disabled = true;
      }
    });

    selectProduct2.addEventListener('change', e => {
      let product = product_in_select2[selectProduct2.value];
      if (product != undefined) {
        document.querySelector('#priceSelect2').innerHTML = client_type == 'minor' ?
          `<option value="minor" selected>Precio de Detalle $${product.price}</option>
                     <option value="major">Precio de Mayor $${product.major}</option>
                     <option value="none">Valor Personalizado</option>` :
          `<option value="minor">Precio de Detalle $${product.price}</option>
                     <option value="major" selected>Precio de Mayor $${product.major}</option>
                     <option value="none">Valor Personalizado</option>`
        document.querySelector("#max_product_cant2").innerHTML = `Cantidad maxima ${product.stock - product.reserved}`;
        document.querySelector("#product__image2").src = product.image;
        document.getElementById('product__image2').style.display = 'block';
      }
    });

    document.querySelector("#priceSelect2").addEventListener('change', e => {
      if (document.querySelector("#priceSelect2").value == 'none') {
        document.getElementById('personalizedPrice2').style.display = 'block';
        document.querySelector("#personalizedPrice2").disabled = false;
        document.querySelector("#personalizedPrice2").focus();

      } else {
        document.getElementById('personalizedPrice2').style.display = 'none';
        document.querySelector("#personalizedPrice2").disabled = true;
      }
    });

    document.querySelector("#requestTransferButton").addEventListener('click', e => {
      let data = {
        client: '<%= cliente.id %>',
        sale: '<%= in_process !== null ? in_process.id : null %>',
        sucursal: document.querySelector("#trasnferSucursal").value,
        product: selectProduct2.value,
      }

      document.querySelector("#requestTransferButton").disabled = true;


      let p = product_in_select2[selectProduct2.value];
      if (p !== undefined) {
        data.product = p.id;
        let price = document.getElementById('priceSelect2').value;
        data.price = price == 'none' ?
          document.getElementById('personalizedPrice2').value :
          (price == 'minor' ? p.price : p.major);

        data.cant = document.getElementById('product_cant2').value;
        let _dist = Number.parseInt(p.stock) - Number.parseInt(p.reserved);
        if (data.cant > _dist) {
          document.querySelector("#requestTransferButton").disabled = false;
          document.getElementById('product_cant2').value = _dist;
          return errorMessage(`La cantidad Maxima no puede ser mayor a ${_dist}`);
        }
        console.log(p)
      } else {
        return errorMessage('No ha Seleccionado un producto');
      }
      // }

      if (data.price == '' || data.price < 0 || data.price == null) {
        return errorMessage('Precio no V谩lido, Si desea realizar una regal铆a, por favor seleccione valor personalizado y escriba el precio 0');
      } else if (data.cant < 1) {
        document.getElementById('product_cant2').value = '1';
        return errorMessage('La cantidad no puede ser menor a 1');
      }
      //enviar datos al server
      console.log(data)

      //TOKEN
      postData('/inventory/requisition/addToClient', data).then(data => {
        if (data.status == 'success') {
          successMessage('Actualizado');
          setTimeout(() => {
            document.location.reload();
          }, 1500);
        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);

        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la p谩gina he int茅ntalo nuevamente');
        }
      });

    });

    document.getElementById('fake_image_input').onchange = function(e) {
      if (addingImageValidateImage(this)) {
        AddingImageChargeFromFile(e.srcElement, previewimagezone, 1 / 1, realImage);
      } else {
        document.getElementById("add_image_preview").innerHTML = "";
        realImage.value = "";
        return errorMessage('Tipo de Archivo no Admitido. Por favor seleccione un archivo de imagen');
      }
    };

    captureImagePasted(document.getElementById("add-image-fake_text"), previewimagezone, 1 / 1, realImage);

    document.querySelector('#show_to_add').addEventListener('click', e => {
      document.querySelector('#form_adding').style.display = 'block';
      document.querySelector('#show_to_add').style.display = 'none';
    });

  });

  const free_detail = () => {
    free = true;
    document.querySelector('#inventory_detail').style.display = 'none';
    document.querySelector('#free_toggle').style.display = 'none';

    document.querySelector('#free_detail').style.display = 'block';
    document.querySelector('#inventory_toggle').style.display = 'inline-block';
  };

  const form_inventory = () => {
    return false;
    free = false;
    document.querySelector('#free_detail').style.display = 'none';
    document.querySelector('#inventory_toggle').style.display = 'none';

    document.querySelector('#inventory_detail').style.display = 'block';
    document.querySelector('#free_toggle').style.display = 'none';
  };

  const quit = _id => {
    let detail = current_details[_id];
    detail_to_quit = _id;

    document.querySelector('#quit_image').src = detail.image;
    document.querySelector('#quit_name').innerHTML = detail.description;
    document.querySelector('#quit_units').innerHTML = `<b>${detail.cant} Unidades</b>`;
    document.querySelector('#quit_reserved').innerHTML = `<b>${detail.reserved} Unidades</b>`;
    document.querySelector('#quit_ready').innerHTML = `<b>${detail.ready} Unidades</b>`;
    document.querySelector('#quit_revocable').innerHTML = `<b>${detail.cant - detail.ready} Unidades</b>`;
    document.querySelector('#quit_input').value = detail.cant - detail.ready;
    document.querySelector('#quit_input').max = detail.cant - detail.ready;
    document.querySelector('#quit_input').disabled = false;

    modalQuit.toggle();
  }

  const release_request = _id => {
    let detail = current_details[_id];
    detail_to_quit = _id;
    quit_case = 'reserved';

    document.querySelector('#quit_image').src = detail.image;
    document.querySelector('#quit_name').innerHTML = detail.description;
    document.querySelector('#quit_units').innerHTML = `<b>${detail.cant} Unidades</b>`;
    document.querySelector('#quit_reserved').innerHTML = `<b>${detail.reserved} Unidades</b>`;
    document.querySelector('#quit_ready').innerHTML = `<b>${detail.ready} Unidades</b>`;
    document.querySelector('#quit_input').value = detail.ready;
    document.querySelector('#quit_input').max = detail.ready;
    document.querySelector('#quit_input').disabled = true;
    modalQuit.toggle();
  }
</script>
<% } else { %>
<script>
  const new_sale = () => {
    window.location.href = `/sales/create/<%= cliente.id %>`
  };
</script>
<% }} %>