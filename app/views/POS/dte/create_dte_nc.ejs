<!DOCTYPE html>
<html lang="es">

<head>
  <%- include('../../Layouts/Head.ejs') %>
  <link rel="stylesheet" href="assets/libs/choices/choices.min.css">
</head>

<body class="<%= darkMode %>">
  <%- include('../../Layouts/SideBar.ejs') %>
  <div id="main">
    <%- include('../../Layouts/NavBar.ejs') %>

    <div class="container-fluid">
      <div class="card">
        <div class="card-header">
          <h2 class="text-3xl font-bold text-center text-gray-800 mb-8">Nota de Credito (DTE Manual)</h2>
        </div>
        <div class="card-body">
          <!-- NIT y NRC en una fila -->
          <h4 class="text-center">Busca el CCFE a Afectar</h4>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <input type="text" name="uuid" id="uuid" class="form-control">
                <label for="uuid">Codigo de generación</label>
              </div>
            </div>
            <div class="col-md-4">
              <div class="form-group">
                <input type="date" name="dteFecha" id="dteFecha" class="form-control">
                <label for="dteFecha">Codigo de generación</label>
              </div>
            </div>
            <div class="col-md-2 text-center align-items-center">
              <button onclick="buscarCCF()" class=" mt-2 btn btn-outline-danger round">Buscar</button>
            </div>
          </div>
          <div id="receptor_data">

          </div>
        </div>

        <div class="card-body mt-5">
          <h4 class="text-center">
            Detalles del Cuerpo del Documento
          </h4>


          <div class="table-responsive mb-4 table-responsive">
            <table class="table table-sm table-bordered table-striped">
              <thead>
                <tr>
                  <th scope="col" style="max-width: 30%;width: 30%;">Descripción</th>
                  <th scope="col" style="max-width: 140px;width: 140px;">Cantidad</th>
                  <th scope="col" style="max-width: 140px;width: 140px;">Precio Unitario</th>
                  <th>Subtotal</th>
                  <th scope="col" style="max-width: 140px;width: 140px;">Código</th>
                  <th scope="col" style="max-width: 140px;width: 140px;">Tipo de Ítem</th>
                  <th scope="col" style="max-width: 140px;width: 140px;">Unidad de Medida</th>
                  <th scope="col">Acciones</th>
                </tr>
              </thead>
              <tbody id="documentoDetalleTableBody">
                <!-- Filas de detalles se agregarán aquí dinámicamente -->
              </tbody>
              <tbody id="detalleTotales">
                <tr>
                  <td colspan="3" class="text-right">Subtotal</td>
                  <td id="_subtotal"></td>
                  <td colspan="4"></td>
                </tr>

                <tr>
                  <td colspan="3" class="text-right">IVA</td>
                  <td id="_iva"></td>
                  <td colspan="4"></td>
                </tr>

                <tr>
                  <td colspan="3" class="text-right">Total</td>
                  <td id="_total"></td>
                  <td colspan="4"></td>
                </tr>
              </tbody>
              <tfoot>
                <tr>
                  <td colspan="8" class="text-center">
                    <button type="button" class="btn btn-outline-primary mr-3 mt-3 ml-3 round" id="addDetalleBtn">Agregar Ítem</button>
                    <button type="button" class="btn btn-outline-success mr-3 mt-3 ml-3 round" id="Totalizar">Totalizar</button>
                  </td>
                </tr>

              </tfoot>
            </table>
          </div>
        </div>

        <div class="card-body">
          <h4>Apendices</h4>
          <div class="table-responsive">
            <table class="table table-sm table-bordered table-hover">
              <thead>
                <tr>
                  <th>Campo</th>
                  <th>Etiqueta</th>
                  <th>Valor</th>
                  <th>opt</th>
                </tr>
              </thead>
              <tbody id="TBodyApendices">


              </tbody>
              <tfoot>
                <tr>
                  <td colspan="4" class="text-center">
                    <button class="btn round btn-outline-primary" onclick="addApendiceRow()" id="btnAddApendices">
                      Agregar Apendice
                    </button>
                  </td>
                </tr>
              </tfoot>
            </table>
          </div>
        </div>

        <div class="card-footer text-center">
          <div id="results" class="mt-2 mb-4">


          </div>
          <button class="round btn-lg btn btn-primary mt-2" id="btnSave" disabled>
            Procesar DTE
          </button>
        </div>

      </div>
    </div>

    <%- include('../../Layouts/Footer.ejs') %>
  </div>
</body>
<%- include('../../Layouts/Scripts.ejs') %>
<script src="assets/libs/choices/choices.min.js"></script>
<script>
  const documentoDetalleTableBody = document.querySelector("#documentoDetalleTableBody");
  const TBodyApendices = document.querySelector("#TBodyApendices");
  const addDetalleBtn = document.querySelector('#addDetalleBtn');
  const btnAddApendices = document.querySelector('#btnAddApendices');
  const IVA_VAL = Number.parseFloat('<%= VALOR_IVA %>');
  const helper_url = '<%= helper_url %>';
  var selected_dte = null;
  var current_dte = null;


  const buscarCCF = async () => {

    selected_dte = null;
    current_dte = null;

    const uuid = document.querySelector("#uuid").value.trim();
    const date_ = document.querySelector("#dteFecha").value.trim();
    const regex = /^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    if (!regex.test(uuid)) {
      return errorMessage('el codigo de generacion proporcionado no corresponde a un numero valido');
    }else if(date_.length<10){
      return errorMessage('Proporcione una fecha para buscar el Documento');
    }

    let url_ = `/pos/getJson/${uuid}/${date_}`;
    let response = await fetch(url_);

    if (!response.ok) {
      throw new Error(`Error de red o del servidor: ${response.status} ${response.statusText}`);
    }

    // Parse the response body as JSON
    const data = await response.json();
    if (data.status == "success") {
      if (data.json.identificacion.tipoDte !== "03") {
        return errorMessage('Se encontro el Documento, pero no es un Comprobante de Credito Fiscal Electronico');
      }
      selected_dte = data.model;
      current_dte = data.json;

      cargar_data();
      return;
    }
    return errorMessage('Documento no encontrado');
  }

  const cargar_data = () => {
    if (current_dte) {
      const dte = current_dte;

      document.querySelector("#receptor_data").innerHTML = `<h5 class="card-title mt-5 text-primary mb-3">Datos del Documento</h5>
          <div class="row mb-3">
            <div class="col-md-6">
                  
                  <p><strong>Código de Generación:</strong> ${dte.identificacion.codigoGeneracion }</p>
                  <p><strong>Número de Control:</strong> ${dte.identificacion.numeroControl }</p>
                  <p><strong>Monto Total Operación:</strong> $${dte.resumen.montoTotalOperacion }</p>
            </div>
            <div class="col-md-6">
                  <p><strong>Versión:</strong> ${ dte.identificacion.version}</p>
                  <p><strong>Ambiente:</strong> ${dte.identificacion.ambiente }</p>
                  <p><strong>Fecha de Emisión:</strong> ${dte.identificacion.fecEmi }</p>
                  <p><strong>Hora de Emisión:</strong> ${dte.identificacion.horEmi }</p>
            </div>
          </div>

          <hr class="my-4">

          <!-- Información del Receptor -->
          <h5 class="card-title text-primary mb-3">Receptor</h5>
          <div class="row mb-3">
            <div class="col-md-6">
              <p><strong>NIT:</strong> ${dte.receptor.nit }</p>
              <p><strong>NRC:</strong> ${dte.receptor.nrc }</p>
              <p><strong>Nombre:</strong> ${dte.receptor.nombre}</p>
            </div>
            <div class="col-md-6">
              <p><strong>Teléfono:</strong> ${dte.receptor.telefono || '' }</p>
              <p><strong>Correo:</strong> ${dte.receptor.correo || 'N/A' }</p>
            </div>
          </div> `;

    }
  };

  const subtotalizar = node => {
    let cant = Number.parseInt(node.querySelector('.cantidad-item').value);
    let price = Number.parseFloat(node.querySelector('.precio-uni-item').value);
    node.querySelector(".subtotal-td").innerHTML = isNaN(cant) || isNaN(price) ? '$ 0.00' : `$ ${money_format(cant * price)}`;

  }

  const addDetalleRow = () => {

    document.querySelector("#btnSave").disabled = true;
    const newRow = document.createElement('tr');
    newRow.innerHTML = `
                <td>
                    <input type="text" class="form-control descripcion-item" placeholder="Descripción" required>
                </td>
                <td>
                    <input type="number" class="form-control cantidad-item" oninput="subtotalizar(this.parentNode.parentNode)" placeholder="Cantidad" min="0" step="any" required>
                </td>
                <td>
                    <input type="number" class="form-control precio-uni-item" oninput="subtotalizar(this.parentNode.parentNode)" placeholder="Precio Uni." min="0" step="0.01" required>
                </td>
                <td class="subtotal-td">
                    
                </td>
                <td>
                    <input type="text" class="form-control codigo-item" placeholder="Código">
                </td>
                <td>
                    <select class="form-select tipo-item" required>
                        <option value="1">Bienes</option>
                        <option value="2">Servicios</option>
                        <option value="3">Ambos (incluye bienes y servicios, incluye los dos inherente a los Productos o Servicios</option>
                        <option value="4">Otros Tributos por Item</option>
                    </select>
                </td>
                <td>
                    <select class="form-select uni-medida-item" required>
                      <option value="59">Unidad</option>
                      <option value="13">metro cuadrado</option>
                      <option value="15">Vara cuadrada</option>
                      <option value="18">metro cúbico</option>
                      <option value="20">Barril</option>
                      <option value="22">Galón</option>
                      <option value="23">Litro</option>
                      <option value="24">Botella</option>
                      <option value="26">Mililitro</option>
                      <option value="30">Tonelada</option>
                      <option value="32">Quintal</option>
                      <option value="33">Arroba</option>
                      <option value="34">Kilogramo</option>
                      <option value="36">Libra</option>
                      <option value="37">Onza troy</option>
                      <option value="38">Onza</option>
                      <option value="39">Gramo</option>
                      <option value="40">Miligramo</option>
                      <option value="42">Megawatt</option>
                      <option value="43">Kilowatt</option>
                      <option value="44">Watt</option>
                      <option value="45">Megavoltio-amperio</option>
                      <option value="46">Kilovoltio-amperio</option>
                      <option value="47">Voltio-amperio</option>
                      <option value="49">Gigawatt-hora</option>
                      <option value="50">Megawatt-hora</option>
                      <option value="51">Kilowatt-hora</option>
                      <option value="52">Watt-hora</option>
                      <option value="53">Kilovoltio</option>
                      <option value="54">Voltio</option>
                      <option value="55">Millar</option>
                      <option value="56">Medio millar</option>
                      <option value="57">Ciento</option>
                      <option value="58">Docena</option>
                      <option value="99">Otra</option>
                    </select>
                </td>
                <td>
                    <span class="badge bg-danger btn-sm remove-item-btn">Eliminar</span>
                </td>
            `;
    // Añadir el event listener para el botón de eliminar de la nueva fila
    newRow.querySelector('.remove-item-btn').addEventListener('click', function() {
      newRow.remove(); // Elimina la fila del DOM
    });
    documentoDetalleTableBody.appendChild(newRow);
  }


  const addApendiceRow = () => {
    const newApendiceRow = document.createElement('tr');
    newApendiceRow.innerHTML = `
                <td>
                    <input type="text" class="form-control apendice-campo">
                  </td>
                  <td>
                    <input type="text" class="form-control apendice-etiqueta">
                  </td>
                  <td>
                    <input type="text" class="form-control apendice-valor">
                  </td>
                  <td>
                    <span class="bg-danger badge btn-delete-apendice">
                      Eliminar
                    </span>
                  </td>
            `;

    // Añadir el event listener para el botón de eliminar de la nueva fila
    newApendiceRow.querySelector('.btn-delete-apendice').addEventListener('click', function() {
      newApendiceRow.remove(); // Elimina la fila del DOM
    });
    TBodyApendices.appendChild(newApendiceRow);



  }

  document.addEventListener('DOMContentLoaded', event => {

    document.querySelector("#Totalizar").addEventListener('click', e => {
      if(current_dte == null){
            return errorMessage('Primero debes identificar el CCFE a Ajustar')
      }
      let rows = documentoDetalleTableBody.querySelectorAll('tr');
      if (rows.length < 1) {
        return errorMessage('Agregue al menos un detalle valido al cuerpo del documento');
      }
      let exenta = false;
      var suma_gravadas = 0,
        suma_exenta = 0,
        suma_iva = 0;
      let contador = 0;
      rows.forEach(row => {
        const cantidad = parseFloat(row.querySelector('.cantidad-item').value);
        const precioUni = parseFloat(row.querySelector('.precio-uni-item').value);

        // Solo agregar si la descripción y la cantidad son válidas (puedes ajustar esta validación)
        if (!isNaN(cantidad) && !isNaN(precioUni)) {
          contador++;
          let venta_gravada = fix_number((cantidad * precioUni), 4);
          if (exenta) {
            suma_exenta = fix_number(venta_gravada + suma_exenta);
          } else {
            suma_iva = fix_number(fix_number(venta_gravada * IVA_VAL) + suma_iva);
            suma_gravadas = fix_number(suma_gravadas + venta_gravada);
          }
        }

      });

      if (contador < 1) {
        return errorMessage('Agregue al menos un detalle valido al cuerpo del documento');
      }


      let total = (suma_exenta + suma_iva + suma_gravadas);
      if (total > current_dte.resumen.totalPagar) {
        return errorMessage(`El monto maximo no puede ser mas de ${current_dte.resumen.totalPagar} Dolares `);
      }
      document.querySelector("#_subtotal").innerHTML = `$ ${money_format(suma_gravadas)}`;
      document.querySelector("#_iva").innerHTML = `$ ${money_format(suma_iva)}`;
      document.querySelector("#_total").innerHTML = `$ ${money_format(suma_gravadas + suma_iva)}`;
      document.querySelector("#btnSave").disabled = false;
    });


    document.querySelector("#btnSave").addEventListener('click', e => {
      if(current_dte == null){
            return errorMessage('Primero debe identificar el CCFE a Afectar')
      }

      let retencion = current_dte.resumen.ivaRete1 > 0;
      e.target.disabled = true;
      var cuerpoDocumento = [];
      let subtotal = 0.00;
      let exenta = false;

      const rows = documentoDetalleTableBody.querySelectorAll('tr');
      if (rows.length < 0) {
        return errorMessage('Agregue al menos un detalle valido al cuerpo del documento');
      }
      contador = 1;
      var suma_gravadas = 0,
        suma_exenta = 0,
        suma_iva = 0;

      rows.forEach(row => {
        const codigo = row.querySelector('.codigo-item').value;
        const descripcion = row.querySelector('.descripcion-item').value;
        const tipoItem = Number.parseInt(row.querySelector('.tipo-item').value);
        const uniMedida = Number.parseInt(row.querySelector('.uni-medida-item').value);
        const cantidad = Number.parseInt(row.querySelector('.cantidad-item').value);
        const precioUni = Number.parseFloat(row.querySelector('.precio-uni-item').value);

        // Solo agregar si la descripción y la cantidad son válidas (puedes ajustar esta validación)
        if (descripcion && !isNaN(cantidad) && !isNaN(tipoItem) && !isNaN(uniMedida) && !isNaN(precioUni)) {
          let venta_exenta = 0,
            venta_gravada = 0,
            iva = 0;

          if (exenta) {
            venta_exenta = fix_number((cantidad * precioUni), 4);
          } else {
            venta_gravada = fix_number((cantidad * precioUni), 4);
            iva = venta_gravada * IVA_VAL;
          }
          cuerpoDocumento.push({
            numItem: contador,
            tipoItem: tipoItem,
            numeroDocumento: current_dte.identificacion.codigoGeneracion,
            codigo: codigo || null, // Permitir null si está vacío
            codTributo: null,
            descripcion: descripcion,
            cantidad: cantidad,
            uniMedida: uniMedida,
            precioUni: precioUni,
            montoDescu: 0,
            ventaNoSuj: 0,
            ventaExenta: venta_exenta,
            ventaGravada: venta_gravada,
            tributos: venta_gravada > 0 ? ['20'] : null,
          });
          contador++;
          suma_gravadas = fix_number(suma_gravadas + venta_gravada, 2);
          suma_exenta = fix_number(suma_exenta + venta_exenta, 2);
          suma_iva = fix_number(iva + suma_iva, 2);

        }
      });

      retencion = (retencion && suma_gravadas > 100.00) ? fix_number((suma_gravadas * 0.01), 2) : 0;
      let total = fix_number((suma_gravadas + suma_iva - retencion), 2);
      if (total > current_dte.resumen.totalPagar) {
        return errorMessage(`El monto Maximo no puede ser mas de ${current_dte.resumen.totalPagar}`)
      }



      const resumen = {
        totalNoSuj: 0,
        totalExenta: 0,
        totalGravada: suma_gravadas,
        subTotalVentas: suma_gravadas,
        descuNoSuj: 0,
        descuExenta: 0,
        descuGravada: 0,
        totalDescu: 0,
        tributos: suma_gravadas > 0 ? [{
          codigo: "20",
          descripcion: "Impuesto al Valor Agregado 13%",
          valor: fix_number(suma_iva)
        }] : null,
        subTotal: suma_gravadas,
        ivaPerci1: 0,
        ivaRete1: retencion,
        reteRenta: 0,
        montoTotalOperacion: total,
        totalLetras: String(money_to_string(total)).toLocaleUpperCase(),
        condicionOperacion: 1,
      }


      var apendices = null;

      let ApendiceRows = TBodyApendices.querySelectorAll('tr');
      if (ApendiceRows.length > 0) {
        apendices = [];
        ApendiceRows.forEach(row => {
          let apendice = {
            campo: row.querySelector('.apendice-campo').value.trim(),
            etiqueta: row.querySelector('.apendice-etiqueta').value.trim(),
            valor: row.querySelector('.apendice-valor').value.trim(),
          }

          if (apendice.campo.length > 0 && apendice.valor.length > 0) {
            apendices.push(apendice);
          }
        });

        apendices = apendices.length > 0 ? apendices : null;
      }

      let data = {
        'dte_type': '05',
        "model": selected_dte,
        "cuerpoDocumento": cuerpoDocumento,
        "resumen": resumen,
        "apendice": apendices,
      }

      console.log(data);

      
      postData('/pos/procces_dte_manual', data).then(data => {
        if (data.status == 'success') {
          document.querySelector("#results").innerHTML = `
          <h4> DTE: ${data.json.codigo} generada con exito</h4>
          <a href="${helper_url}/utils/services/dte/inline?uuid=${data.json.dte.identificacion.codigoGeneracion}&fecha=${data.json.dte.identificacion.fecEmi}" target="_blank" class="btn round btn-outline-secondary">Ver DTE</a>
          <a href="/pos/getJson/${data.json.id}" target="_blank" class="btn round btn-outline-secondary ml-2 mr-2">Descargar DTE.json</a>`;

          e.target.remove();
          successMessage(data.message);
        } else if (data.status == 'errorMessage') {
          e.target.disabled = false;
          return errorMessage(data.message);
        } else {
          return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
        }

      });

      
    });


    addDetalleRow();
    addDetalleBtn.addEventListener('click', addDetalleRow);

  });
</script>

</html>