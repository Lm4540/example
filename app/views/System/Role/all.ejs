<!DOCTYPE html>
<html lang="en">

<head>
   <%- include('../../Layouts/Head.ejs') %>
   <style>
      #setpermissions td {
         padding: 8px;
      }

      .btn-sm,
      .btn-group-sm>.btn {
         padding: 0.4rem 0.4rem;
      }
   </style>
</head>

<body class="<%= darkMode %>">
   <%- include('../../Layouts/SideBar.ejs') %>
   <div id="main">
      <% options=`<a class="ml-5" href="/inventory" style="width: 150px;"><i
          class="fas fa-arrow-alt-circle-left mr-3"></i>Atr√°s</a>`; %>
      <%- include('../../Layouts/NavBar.ejs') %>
      <div class="main-content container-fluid ">
         <div class="page-title text-center">
            <h4>
               <%= pageTitle %>
            </h4>
         </div>
         <div class="row justify-content-center">
            <div class="col-12 col-md-8">
               <table class="table table-borderless table-hover">
                  <% rols.forEach(element=> { %>
                  <tr>
                     <td>
                        <%= element.name %>
                     </td>
                     <td>
                        <div class="btn-group mb-1">
                           <div class="dropdown">
                              <button class="btn btn-primary dropdown-toggle mr-1" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                 Opciones
                              </button>
                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 37px, 0px); top: 0px; left: 0px; will-change: transform;">
                                 <span class="dropdown-item" onclick="viewUsers('<%= element.id %>')">Ver Usuarios</span>
                                 <span class="dropdown-item" onclick="viewPermissions('<%= element.id %>')">Ver
                                    Permisos</span>
                                 <span class="dropdown-item" onclick="setPermissions('<%= element.id %>')">Establecer
                                    permisos</span>
                              </div>
                           </div>
                        </div>

                     </td>
                  </tr>
                  <% }) %>
                  <tr>
                     <td colspan="2" class="text-center">
                        <button class="btn btn-success btn-round" data-bs-toggle="modal" data-bs-target="#newRolModal" style="cursor:pointer">Agregar</button>
                     </td>
                  </tr>
               </table>
            </div>
         </div>
      </div>

      <div class="modal fade" id="viewusers" tabindex="-1" aria-labelledby="add a variation pop up modal" style="display: none;" aria-hidden="true">
         <div class="modal-dialog modal-dialog-centered modal-dialog-centered" role="document">
            <div class="modal-content">
               <div class="modal-header">
                  <h5 class="modal-title" id="">Nuevo Rol</h5>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
               </div>
               <div class="modal-body">

               </div>
               <div class="modal-footer text-right">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
               </div>
            </div>
         </div>
      </div>

      <div class="modal fade" id="setpermissions" tabindex="-1" aria-labelledby="add a variation pop up modal" style="display: none;" aria-hidden="true">
         <div class="modal-dialog modal-dialog-centered modal-dialog-centered" role="document">
            <div class="modal-content">
               <div class="modal-header">
                  <h5 class="modal-title">Establecer permisos</h5>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
               </div>
               <div class="modal-body">
                  <table class="table table-borderless table-hover table-sm">
                     <thead>
                        <tr>
                           <th>Grupo</th>
                           <th>Permiso</th>
                           <th>
                              <i class="fas fa-user-check" style="color: #0ece0e"></i>
                           </th>
                        </tr>
                     </thead>
                     <tbody>
                        <% PermissionList.forEach(permission=> { %>
                        <tr data-bs-toggle="tooltip" data-bs-placement="bottom" title="<%= permission.explication %>" style="cursor:pointer">
                           <td onclick="check_input('<%= permission.permission %>')">
                              <%= permission.group %>
                           </td>
                           <td onclick="check_input('<%= permission.permission %>')">
                              <%= permission.name %>

                           </td>
                           <td>
                              <div class="form-check form-switch">
                                 <input id="per_<%= permission.permission %>" class="form-check-input permission_check" type="checkbox" data-permission="<%= permission.permission %>">
                              </div>
                           </td>
                        </tr>
                        <% }) %>
                     </tbody>
                  </table>

               </div>
               <div class="modal-footer text-center">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
                  <button type="button" class="btn btn-primary" id="setPermissionButton">Guardar</button>
               </div>
            </div>
         </div>
      </div>

      <div class="modal fade" id="newRolModal" tabindex="-1" aria-labelledby="add a variation pop up modal" style="display: none;" aria-hidden="true">
         <div class="modal-dialog modal-dialog-centered modal-dialog-centered" role="document">
            <div class="modal-content">
               <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalCenterTitle">Nuevo Rol</h5>
                  <i class="fas fa-times" style="font-size: 1.2rem; cursor:pointer;" data-bs-dismiss="modal" aria-label="Close"></i>
               </div>
               <div class="modal-body">
                  <div class="form-floating mb-3">
                     <input class="form-control" id="rolName" type="text">
                     <label for="rolName">Nombre del rol</label>
                  </div>
                  <div class="form-floating mb-3">
                     <textarea name="roleDescription" id="roleDescription" class="form-control"></textarea>
                     <label for="roleDescription">Breve descripcion del Rol</label>
                  </div>
               </div>
               <div class="modal-footer text-right">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Cerrar</button>
                  <button type="button" class="btn btn-primary" id="addRolebutton">Guardar</button>
               </div>
            </div>
         </div>
      </div>


      <%- include('../../Layouts/Footer.ejs') %>
   </div>
</body>
<%- include('../../Layouts/Scripts.ejs') %>
<script>
   const permission = JSON.parse('<%- JSON.stringify(indexed_permissions) %>');
   var roles = JSON.parse('<%- JSON.stringify(indexed_rol) %>');
   var role_updating = null;
   var modalUsers = new bootstrap.Modal(document.getElementById('viewusers'), {
      keyboard: true
   });
   var modalSetpermissions = new bootstrap.Modal(document.getElementById('setpermissions'), {
      keyboard: true
   });

   const viewUsers = (eval) => {
      let role = roles[eval];
      if (role !== undefined) {
         //mostrar la lista de Usuarios en el rol
         document.querySelector("#viewusers .modal-title").innerHTML = `Users con el Rol de "${role.name}"`;
         if (role.users.length > 0) {
            let content = `<ul class="list-group">`;
            role.users.forEach(user => {
               content += `<li class="list-group-item">${user.name} (${user.email})</li>`;
            });
            content += `</ul>`;
            document.querySelector("#viewusers .modal-body").innerHTML = content;

         } else {
            document.querySelector("#viewusers .modal-body").innerHTML = 'No Hay ningun usuario relacionado a este Rol';
         }
         modalUsers.toggle();
      }
   }

   const viewPermissions = (eval) => {
      let role = roles[eval];
      if (role !== undefined) {
         //mostrar la lista de Usuarios en el rol
         document.querySelector("#viewusers .modal-title").innerHTML = `Permisos del Rol de "${role.name}"`;
         if (role.permission.length > 0) {
            let content = `<ul class="list-group">`;
            role.permission.forEach(perm => {
               content += `<li class="list-group-item">${permission[perm]}</li>`;
            });
            content += `</ul>`;
            document.querySelector("#viewusers .modal-body").innerHTML = content;

         } else {
            document.querySelector("#viewusers .modal-body").innerHTML = 'Aun no se han establecido Permisos para este Rol';
         }
         modalUsers.toggle();
      }
   }

   const setPermissions = (eval) => {
      role_updating = eval;
      let role = roles[eval];
      if (role !== undefined) {

         document.querySelector("#setpermissions .modal-title").innerHTML = `Establecer Permisos para el Rol de "${role.name}"`;
         //obtener todos los permisos y marcarlos como no checados
         let chekks = document.querySelectorAll('.permission_check');
         for (let index = 0; index < chekks.length; index++) {
            chekks[index].checked = false;
         }

         if (role.permission.length > 0) {
            role.permission.forEach(perm => {
               document.querySelector(`#per_${perm}`).checked = true;
            });
         }
         modalSetpermissions.toggle();
         document.querySelector('#setPermissionButton').disabled = false;
      } else {
         return errorMessage('Rol no reconocido, recargue la pagina e intente nuevamente.')
      }
   }

   const check_input = (perm) => document.querySelector(`#per_${perm}`).checked = !document.querySelector(`#per_${perm}`).checked;

   document.addEventListener('DOMContentLoaded', (event) => {
      document.querySelector('#setPermissionButton').addEventListener('click', e => {
         e.target.disabled = true;
         let elements = document.querySelectorAll('.permission_check:checked');
         let permissions = [];
         if (elements.length > 0) {
            elements.forEach(element => permissions.push(element.dataset.permission));
         }
         if (role_updating !== null) {
            postData('/user/role/update', {
               role: role_updating,
               permissions
            }).then(data => {
               if (data.status == 'success') {
                  successMessage('Guardado con Exito');
                  /**Redirigir a la pagina del Proveedor*/
                  roles[data.data.id].permission = data.data.permission;
                  modalSetpermissions.toggle();
               } else if (data.status == 'errorMessage') {
                  e.target.disabled = false;
                  return errorMessage(data.message);
               } else {
                  return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la p√°gina he int√©ntalo nuevamente');
               }
            });
         }
      });

      document.querySelector("#addRolebutton").addEventListener('click', e => {
         let rolName = document.querySelector('#rolName').value;
         let roleDescription = document.querySelector('#roleDescription').value;


         if (rolName.length < 3) {
            return errorMessage('Proporcione un nombre para el Rol');
         } else if (roleDescription.length < 10) {
            return errorMessage('Proporcione una descripcion de 10 a 300 caracteres de longitud');
         } else {
            //enviar el rol al servidor
            postData('/user/role/create', {
               name: rolName,
               description: roleDescription
            }).then(data => {
               if (data.status == 'success') {
                  successMessage('Guardado con Exito, redirigiendo');
                  /**Redirigir a la pagina del Proveedor*/
                  setTimeout(() => {
                     window.location.reload();
                  }, 1500);

               } else if (data.status == 'errorMessage') {
                  e.target.disabled = false;
                  return errorMessage(data.message);
               }else{

                  return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la p√°gina he int√©ntalo nuevamente');
               }

            });
         }
      });
   });
</script>

</html>