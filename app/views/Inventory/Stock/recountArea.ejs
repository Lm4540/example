<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../../Layouts/Head.ejs') %>
  <style>
    .pulse {
      color: #f80d18;
      margin-right: 1rem;
      /* animation-name: _pulse; */
      animation-duration: .5s;
      animation-timing-function: ease;
      animation-iteration-count: infinite;
    }

    .choices {
      margin-bottom: 2px;
    }

    #revised .pulse {
      color: #078f1e;
    }

    @keyframes _pulse {
      from {
        font-size: 100%;
      }

      to {
        font-size: 125%;
      }
    }
  </style>
</head>
<% options = `<a class="ml-5" href="/inventory/product/recount">Atrás</a>`; %>

<body class="<%= darkMode %>">
  <%- include('../../Layouts/SideBar.ejs') %>
  <div id="main">
    <%- include('../../Layouts/NavBar.ejs') %>
    <div class="main-content container-fluid">
      <div class="row justify-content-center">
        <h3 class="text-center">
          Area: <%= area.name%>
        </h3>



        <div class="col-12 text-center">
          <button class="btn btn-outline-danger round" onclick="view_add_zone();">Buscar y Agregar</button>
          <button class="btn btn-outline-success round" onclick="view_added_zone();">Ver Lista de Agregados</button>
          <button class="btn btn-outline-warning round" onclick="close_area();">Area Verificada</button>
        </div>

        <div class="col-12 mt-5" id="added_zone">
          <table class="table table-bordered table-sm table-stripped">
            <thead>
              <tr>
                <th>Imagen</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Opciones</th>
              </tr>
            </thead>
            <tbody>
              <% details.forEach(detail => { %>
              <tr>
                <td><img src="<%= products[detail.product].image %>" style="width: 150px;"></td>
                <td>
                  <%= products[detail.product].name %><br> #SKU <%= products[detail.product].sku %>
                  <br>
                  <br>
                  (<%= detail.createdBy %>)
                </td>
                <td>
                  <input class="form-control form-control-sm" type="number" id="detail_cantidad_<%= detail.id %>" step="1" value="<%= detail.cant ?? 0 %>" style="max-width: 120px;">
                </td>
                <td>
                  <button class="btn btn-primary round" onclick="update_detail('<%= detail.id %>', this)">Actualizar</button>
                </td>
              </tr>

              <% }) %>
            </tbody>
          </table>
        </div>

        <div class="col-12 mt-5" id="add_zone">
          <input type="search" id="destinoSelect" class="form-control" placeholder="Buscar producto...">
          <small>Escribe el nombre o SKU del Producto</small>

          <div class="row mt-5" id="searchProductDiv">

          </div>

        </div>


      </div>
    </div>





    <%- include('../../Layouts/Footer.ejs') %>
  </div>
</body>
<%- include('../../Layouts/Scripts.ejs') %>
<script>
  const destinoSelect = document.querySelector('#destinoSelect');
  var timerDestino;
  var destino_last_val = "";
  var destinoSearchResult = {};
  const searchProductDiv = document.querySelector('#searchProductDiv');


  const view_add_zone = () => {
    document.querySelector('#add_zone').style.display = 'block';
    document.querySelector('#added_zone').style.display = 'none';
  }

  const view_added_zone = () => {
    document.querySelector('#add_zone').style.display = 'none';
    document.querySelector('#added_zone').style.display = 'block';
  }

  const add_detail = async (id) => {
    let cant = document.querySelector(`#cantidad_${id}`).value;
    if (isNaN(cant) || cant < 1) {
      return errorMessage('Ingrese una cantidad valida');
    }

    let dv = document.querySelector(`#search_div_${id}`);
    dv.parentNode.removeChild(dv);


    postData('/inventory/product/recountArea', {
      product: id,
      cant,
      area: '<%= area.id %>',
      case: 'add',
    }).then(data => {
      if (data.status == 'success') {
        successMessage('Detalle agregado');


      } else if (data.status == 'errorMessage') {
        return errorMessage(data.message);
      } else {
        return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
      }
    });
  }

  const close_area = async (id) => {

    postData('/inventory/product/recountArea', {
      area: '<%= area.id %>',
      case: 'close',
    }).then(data => {
      if (data.status == 'success') {
        successMessage('Area Cerrada');
        window.location.reload();

      } else if (data.status == 'errorMessage') {
        return errorMessage(data.message);
      } else {
        return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
      }
    });
  }

  const update_detail = async (id, element) => {
    let cant = document.querySelector(`#detail_cantidad_${id}`).value;
    if (isNaN(cant)) {
      return errorMessage('Ingrese una cantidad valida');
    }

    element.disabled = true;

    postData('/inventory/product/recountArea', {
      detail: id,
      cant,
      case: cant > 0 ? 'update' : 'delete',
    }).then(data => {
      if (data.status == 'success') {
        successMessage('Actualizado');


      } else if (data.status == 'errorMessage') {
        return errorMessage(data.message);
      } else {
        return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
      }
    });
  }



  const doSearchDestinoProduct = async (val, stock = false) => {
    // Opciones por defecto estan marcadas con un *
    const response = await fetch(`/inventory/products/select2?search=${encodeURIComponent(val)}&onlystock=${stock}`, {
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
    });
    return response.json();
  }




  document.addEventListener("DOMContentLoaded", (event) => {
    view_add_zone();



    destinoSelect.addEventListener('input', async (e) => {
      let valor_actual = destinoSelect.value;
      if (destino_last_val !== valor_actual) {
        destino_last_val = valor_actual;
        clearTimeout(timerDestino);
        timerDestino = setTimeout(async () => {
          let data = await doSearchDestinoProduct(valor_actual);
          searchProductDiv.innerHTML = '';
          data.forEach(element => {
            let div = document.createElement('div');
            div.id = `search_div_${element.id}`;
            div.className = 'col-12 col-sm-6 col-md-3';
            div.innerHTML = `<div class="card"">
      <img src="${element.image}" class="card-img-top" alt="Imagen del producto">
      <div class="card-body">
        <h5 class="card-title">${element.name}</h5>
        <p class="card-text">SKU: ${element.sku}</p>
        <div class="form-group">
          <label for="cantidad">Cantidad:</label>
          <input type="number" class="form-control" id="cantidad_${element.id}" value="1" min="1">
        </div>
        <button class="btn btn-primary" onclick="add_detail('${element.id}')">Agregar a la lista</button>
      </div>
    </div>`;


            searchProductDiv.appendChild(div);

          });

        }, 500);
      }
    });


  });
</script>

</html>