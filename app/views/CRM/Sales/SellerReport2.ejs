<!DOCTYPE html>
<html lang="en">

<head>
   <%- include('../../Layouts/Head.ejs') %>
   <link rel="stylesheet" href="assets/libs/grid/mermaid.css">
   <link rel="stylesheet" href="assets/libs/choices/choices.min.css">
   <style>
      .botonF1 {
         cursor: pointer;
         z-index: 1050;
         width: 60px;
         height: 60px;
         border-radius: 100%;
         background: #568add !important;
         right: 0;
         bottom: 0;
         display: scroll;
         position: fixed;
         margin-right: 2rem;
         margin-bottom: 2rem;
         border: none;
         outline: none;
         color: #FFF;
         font-size: 36px;
         box-shadow: 10px 10px 22px -2px rgba(0, 0, 0, .61) !important;
         transition: .3s
      }

      .botonF1:disabled,
      .botonF1[disabled] {
         border: 1px solid #999999 !important;
         background-color: #cccccc !important;
         color: #666666 !important;
         cursor: not-allowed;
      }

      .botonF1:hover {
         transform: scale(1.1)
      }

      .botonF1 i {
         padding-left: 4px;
         font-size: 100%;
         color: white;
      }

      .product_item .card,
      .product_item img {
         border-radius: 1.5em !important;
      }

      .product_item {
         font-size: 110%;
         min-height: 150px;
      }

      .product_item img {
         border-radius: 1.5em !important;
      }

      .product_item p {
         margin-bottom: .2rem;
      }
   </style>
</head>

<body class="<%= darkMode %>">
   <%- include('../../Layouts/SideBar.ejs') %>
   <div id="main">
      <%- include('../../Layouts/NavBar.ejs') %>
      <div class="main-content container-fluid">
         <h3 class="text-center mb-4">Reporte de Ventas por vendedor</h3>
         <div class="row justify-content-center">

            <div class="col">
               <div class="form-group">
                  <label for="seller">Elije un Vendedor</label>
                  <select name="seller" id="seller" class="form-control">
                     <% sucursals.forEach(sucursal => { %>
                     <optgroup label="<%= sucursal.name %>">
                        <% sucursal.sellers.forEach(seller => { %>
                        <option value="<%=seller.id%>"><%=seller.name%></option>
                        <% }) %>
                     </optgroup>
                     <% }) %>


                     <optgroup label="Solo Consulta">
                        <% sucursals.forEach(sucursal => { %>
                        <option data-value="<%=sucursal.id%>" value="s_<%=sucursal.id%>"><%=sucursal.name%></option>
                        <% }) %>

                     </optgroup>
                  </select>

               </div>
            </div>

            <div class="col">
               <div class="form-group">
                  <label for="calc_type">Tipo de calculo</label>
                  <select name="calc_type" id="calc_type" class="form-control">
                     <option value="calculo">Calculo del Mes</option>
                     <option value="history">Datos Historicos</option>
                  </select>

               </div>
            </div>
            <div class="col">
               <div class="form-group">
                  <label for="init">Desde</label>
                  <input type="date" class="form-control" id="init" value="<%= Helper.date_to_input(null, true) %>">
               </div>
            </div>
            <div class="col">
               <div class="form-group">
                  <label for="_date">Hasta</label>
                  <input type="date" class="form-control" id="_date" value="<%= Helper.date_to_input() %>">
               </div>
            </div>

            <div class="col">
               <button class="btn btn-success mt-4" onclick="calc_data()">Buscar</button>
            </div>



         </div>

         <div id="attaced_content" class="mt-5 table-responsive">


         </div>
      </div>
      <%- include('../../Layouts/Footer.ejs') %>
   </div>

</body>

<%- include('../../Layouts/Scripts.ejs') %>
<script>
   var master_date = null,
      seller = null,
      last = 0;

   const calc_data = async () => {
      document.querySelector("#attaced_content").innerHTML = `<div class="text-center">
         <div class="spinner-grow text-danger" role="status" style="width: 150px; height: 150px;">
            <span class="visually-hidden"></span>
            </div>
            <p style="font-weight: bolder; font-size: 150%;">Cargando...</p>
            </div>`;

      seller = document.querySelector("#seller").value;
      let opt = document.querySelector("#calc_type").value;

      if (seller.includes("s_")) {
         opt = 'sucursal';
         seller = document.querySelector("#seller").options[document.querySelector("#seller").selectedIndex].dataset.value;
      }


      master_date = document.querySelector("#_date").value;
      let init_date = document.querySelector("#init").value;
      if (init_date.length < 10 || init_date > master_date) {
         return errorMessage("Elije un rango de fechas correcto");
      }
      let url = `/sales/seller/history/details?seller=${seller}&opt=${opt}&date=${encodeURIComponent(master_date)}&init=${encodeURIComponent(init_date)}`;
      console.log(url)
      let data = await fetch(url).then(data => data.json());

      let content = opt != "calculo" ? `<div class="bg-warning mb-3 text-white pt-1 pb-2 pl-5 pr-5 round">
               <p class="mt-5">NOTA: Está consultando datos históricos, estos no necesariamente son comisión pendiente de pago.</p>
            </div>` : '';
      content += `<table class="table table-sm table-hover table-bordered">
               <thead>
                  <tr>
                     <th>ID</th>
                     <th>ID Vendedor</td>
                     <th>Cliente</th>
                     <th>Fecha de apertura</th>
                     <th>Fin del Proceso</th>
                     <th>Envio</th>
                     <th>Producto Vendido</th>
                     <th>Total Facturado</th>
                     <th>Costo del Producto</th>
                     <th>IVA Credito<br>Fiscal</td>
                     <th>IVA Debito<br>Fiscal</th>
                     <th>IVA a Pagar <br>(Aprox)</th>
                     <th>Ingreso Generado </th>
                  </tr>
               </thead>
               <tbody>`;
      let delivery = 0.00,
         balance = 0.00,
         cost = 0.00,
         iva = 0.0;
         last = 0;
         iva_debito = 0.0;

      data.sales.forEach(sale => {
         last = sale.id;
         let monto_venta = fix_number(sale.balance + sale.delivery_amount);
         let sale_iva_credito = fix_number(monto_venta - (monto_venta / 1.13),2);
         
         let sale_iva_debito = fix_number(sale.cost * 0.13 + (sale.delivery_amount - (sale.delivery_amount /  1.13)),2); 
         

         delivery = fix_number(delivery + sale.delivery_amount ,2);
         balance = fix_number(balance + sale.balance,2 );
         cost = fix_number(cost + sale.cost, 2);
         iva = fix_number(iva + sale_iva_credito, 2);
         iva_debito = fix_number(iva_debito + sale_iva_debito, 2);
         content += `<tr>
                        <td><a href="/sales/view/${sale.id}" target="_blank">${sale.id}</a></td>
                        <td>${sale.seller}</td>
                        <td><a href="/sales/view/${sale.id}" target="_blank">${data.clients[sale.client].name}</a></td>
                        <td class="text-center">${format_date(sale.createdAt, false)}</td>
                        <td class="text-center">${format_date(sale.endAt , false)}</td>
                        <td class="text-center">$${money_format(sale.delivery_amount)}</td>
                        <td class="text-center">$${money_format(sale.balance)}</td>
                        <td class="text-center">$${money_format(monto_venta)}</td>
                        <td class="text-center">$${money_format(sale.cost)}</td>
                        <td class="text-center">$${money_format(sale_iva_credito)}</td>
                        <td class="text-center">$${money_format(sale_iva_debito)}</td>
                        <td class="text-center">$${money_format(sale_iva_credito - sale_iva_debito)}</td>
                        <td class="text-center">$${money_format(sale.balance - sale.cost - (sale_iva_credito - sale_iva_debito))}</td>

                     </tr>`;
      });

      content += `<tr>
                        <td class="text-right" colspan="5">TOTALES</td>
                        <td class="text-center">$${money_format(delivery)}</td>
                        <td class="text-center">$${money_format(balance)}</td>
                        <td class="text-center">$${money_format(balance + delivery)}</td>
                        <td class="text-center">$${money_format(cost)}</td>
                        <td class="text-center">$${money_format(iva)}</td>
                        <td class="text-center">$${money_format(iva_debito)}</td>
                        <td class="text-center">$${money_format(iva - iva_debito)}</td>
                        <td class="text-center">$${money_format(balance + delivery - cost - (iva - iva_debito))}</td>

                     </tr>`;


      content += `</tbody>
                  </table>`;

      if (opt == "calculo") {
         content += `<div class="bg-danger text-white pt-1 pb-2 pl-5 pr-5 round">
               <p class="mt-5">NOTA: El monto del envio se muestra en el cuadro pero no es tomado en cuenta para la determinacion de la ganancia por venta</p>
            </div><div class="mt-4 text-center">
               <button class="btn btn-success btn-lg round" onclick="marcar()">Marcar comisionado</button>
            </div>`
      }

      document.querySelector("#attaced_content").innerHTML = content;
   }


   const marcar = async () => {
      let url = '/sales/seller/history/details';
      postData(url, {
            date: master_date,
            sale: last,
            seller: seller
         })
         .then(data => {
            if (data.status == 'success') {
               successMessage('Ventas Marcadas como comisionadas');
            } else if (data.status == 'errorMessage') {
               e.target.disabled = false;
               return errorMessage(data.message);
            } else {
               return errorMessage('Lo sentimos, ha ocurrido un error, por favor recarga la página he inténtalo nuevamente');
            }
         });
   }
</script>

</html>